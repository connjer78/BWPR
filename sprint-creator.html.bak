<!DOCTYPE html>
<html>
<head>
    <title>BWPR Sprint Creator</title>
    <link rel="stylesheet" href="https://p.trellocdn.com/power-up.min.css">
    <script src="https://p.trellocdn.com/power-up.min.js"></script>
    <style>
        .member-select, .date-input {
            width: 100%;
            margin-bottom: 10px;
        }
        .label-list {
            margin-bottom: 10px;
        }
        .label-item {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }
        .label-color {
            width: 30px;
            height: 15px;
            display: inline-block;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <form id="sprint-form">
        <label>Select Labels:</label>
        <div id="label-list" class="label-list"></div>
        
        <label for="members">Assign Members:</label>
        <select id="members" class="member-select" multiple></select>
        
        <label for="due-date">Due Date:</label>
        <input type="date" id="due-date" class="date-input">
        
        <button type="submit" class="mod-primary">Create Sprint Cards</button>
    </form>

    <script>
        var t = TrelloPowerUp.iframe();

        t.render(function(){
            return Promise.all([
                t.card('labels'),
                t.board('members')
            ])
            .then(function([card, board]){
                // Populate label checkboxes
                var labelList = document.getElementById('label-list');
                card.labels.forEach(function(label){
                    var labelItem = document.createElement('div');
                    labelItem.className = 'label-item';
                    
                    var checkbox = document.createElement('input');
                    checkbox.type = 'checkbox';
                    checkbox.id = 'label-' + label.id;
                    checkbox.value = label.id;
                    
                    var labelSpan = document.createElement('span');
                    labelSpan.className = 'label-color';
                    labelSpan.style.backgroundColor = label.color;
                    
                    var labelText = document.createElement('label');
                    labelText.htmlFor = 'label-' + label.id;
                    labelText.textContent = label.name;
                    
                    labelItem.appendChild(checkbox);
                    labelItem.appendChild(labelSpan);
                    labelItem.appendChild(labelText);
                    labelList.appendChild(labelItem);
                });

                // Populate member select
                var memberSelect = document.getElementById('members');
                board.members.forEach(function(member){
                    var option = document.createElement('option');
                    option.value = member.id;
                    option.text = member.fullName;
                    memberSelect.appendChild(option);
                });
            });
        });

        document.getElementById('sprint-form').addEventListener('submit', function(event){
            event.preventDefault();
            var selectedLabels = Array.from(document.querySelectorAll('#label-list input:checked')).map(checkbox => checkbox.value);
            var members = Array.from(document.getElementById('members').selectedOptions).map(option => option.value);
            var dueDate = document.getElementById('due-date').value;

            // Check if any labels are selected
            if (selectedLabels.length === 0) {
                alert("Please select at least one label to create sprint cards.");
                return;
            }

            t.closePopup();
            
            // Call the createSprintCards function directly
            t.get('card', 'shared', 'createSprintCards')
                .then(function(createSprintCards) {
                    if (createSprintCards) {
                        return t.call(createSprintCards, {
                            labels: selectedLabels,
                            members: members,
                            dueDate: dueDate
                        });
                    } else {
                        throw new Error('createSprintCards function not found');
                    }
                })
                .then(function() {
                    t.closePopup();
                })
                .catch(function(error) {
                    console.error('Error creating sprint cards:', error);
                    t.alert({
                        message: 'There was an error creating sprint cards: ' + error.message,
                        duration: 'long',
                    });
                });
        });
    </script>
</body>
</html>
